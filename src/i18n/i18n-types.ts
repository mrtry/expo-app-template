// This file was auto-generated by 'typesafe-i18n'. Any manual changes will be overwritten.
/* eslint-disable */
import type { BaseTranslation as BaseTranslationType, LocalizedString } from 'typesafe-i18n'

export type BaseTranslation = BaseTranslationType & DisallowNamespaces
export type BaseLocale = 'ja'

export type Locales =
	| 'ja'

export type Translation = RootTranslation & DisallowNamespaces

export type Translations = RootTranslation &
{
	home: NamespaceHomeTranslation,
	login: NamespaceLoginTranslation
}

type RootTranslation = {}

export type NamespaceHomeTranslation = {
	top: {
		/**
		 * ホ​ー​ム
		 */
		header: string
		/**
		 * ホ​ー​ム​画​面
		 */
		body: string
	}
}

export type NamespaceLoginTranslation = {
	top: {
		/**
		 * ホ​ー​ム
		 */
		header: string
		/**
		 * ホ​ー​ム​画​面
		 */
		body: string
		/**
		 * ロ​グ​イ​ン​画​面​へ​移​動
		 */
		button: string
	}
	login: {
		/**
		 * ロ​グ​イ​ン
		 */
		header: string
		/**
		 * ロ​グ​イ​ン​画​面
		 */
		body: string
		/**
		 * 認​証​済​み​画​面​へ​移​動
		 */
		button: string
	}
}

export type Namespaces =
	| 'home'
	| 'login'

type DisallowNamespaces = {
	/**
	 * reserved for 'home'-namespace\
	 * you need to use the `./home/index.ts` file instead
	 */
	home?: "[typesafe-i18n] reserved for 'home'-namespace. You need to use the `./home/index.ts` file instead."

	/**
	 * reserved for 'login'-namespace\
	 * you need to use the `./login/index.ts` file instead
	 */
	login?: "[typesafe-i18n] reserved for 'login'-namespace. You need to use the `./login/index.ts` file instead."
}

export type TranslationFunctions = {
	home: {
		top: {
			/**
			 * ホーム
			 */
			header: () => LocalizedString
			/**
			 * ホーム画面
			 */
			body: () => LocalizedString
		}
	}
	login: {
		top: {
			/**
			 * ホーム
			 */
			header: () => LocalizedString
			/**
			 * ホーム画面
			 */
			body: () => LocalizedString
			/**
			 * ログイン画面へ移動
			 */
			button: () => LocalizedString
		}
		login: {
			/**
			 * ログイン
			 */
			header: () => LocalizedString
			/**
			 * ログイン画面
			 */
			body: () => LocalizedString
			/**
			 * 認証済み画面へ移動
			 */
			button: () => LocalizedString
		}
	}
}

export type Formatters = {}
